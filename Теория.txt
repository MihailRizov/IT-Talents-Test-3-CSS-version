Отговори:
1 - Това е обект, който в себе си съдържа функция, която за параметри приема две функции: resolve и reject.
Използва се при работа с асинхронни функции. Тогава тези данни не ни дават данните веднага, а ни дават този обект. 
Когато данните се върнат този обект си има value, в което стои информацията. 
	При async функциите се използва опростен синтаксис чрез, който се постига същата функционалност. Когато браузера види ключовата дума си await 
спира изпълнението на функцията до този момент, слага я в event queue-то, продължава да изпълнява други задачи и в някакъв момент се връща на тази функция. 
Този синтаксис е много опростен и не се нуждае от callback функции.
Функците направени по метода async се поддържат само в най-съвременните версии на браузерите.
2 - jQuerry се използва за манипулиране на DOM елементи, за AJAX заявки, за анимации и т.н. 
 Eлемнти могат да бъдат създавани използвайки html синтаксис $("<p>").
 Елементи се изтриват с помощта на .remove() метода. По този начин може да се изтрие конкретен елемент.
 Елементите в jQuerry се намират с помощта на CSS селектори. За тяхната манипулация може да използваме
 някои от следните методи: .append(), .appendTo,
3 - Bind() – Може да конструираш функция на база друга функция, която вътрешно в себе си да пази контекст.
setTimeout() e higher order функция която като първи параметър приема callback функция, 
а като втори времe в ms. Callback функцията се изпълнява след като изтече времето. 
Тази функция връща id. Ако искаме да я спрем ползваме clearTimeout(id).
Чрез bind може да подадем рефернция към функция за параметър на setTimeout. Тогава ще получим копие на тази функция, 
която ще има контекст (а може и параметри).
4- CSS селекторите са важни, защото после чрез тях в JS намираме елементи. Самият CSS ги ползва за да намери DOM елементи върху които да приложи стилове.
Няколко CSS селектора са: tag name, class. За css селектори могат да бъдат изплзвани и наименованията на семантичните елементи въведени от HTML 5.